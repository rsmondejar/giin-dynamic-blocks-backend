// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Define your own models here
model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String
  lastName  String?
  password  String
  isAdmin   Boolean   @default(false)
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    String    @db.ObjectId
  forms     Form[]
}

model Role {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  users     User[]
}

model Form {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  slug           String           @unique
  body           String?
  author         User             @relation(fields: [authorId], references: [id])
  authorId       String           @db.ObjectId
  isPublished    Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  FieldValues    FieldValue[]
  FormSubmission FormSubmission[]
}

model Field {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  type        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
  FieldValues FieldValue[]
}

model FieldValue {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  value        String
  placeholder  String?
  isRequired   Boolean         @default(false)
  hint         String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  deletedAt    DateTime?
  field        Field           @relation(fields: [fieldId], references: [id])
  fieldId      String          @db.ObjectId
  form         Form            @relation(fields: [formId], references: [id])
  formId       String          @db.ObjectId
  submission   FormSubmission? @relation(fields: [submissionId], references: [id])
  submissionId String?         @db.ObjectId
}

model FormSubmission {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  form      Form         @relation(fields: [formId], references: [id])
  formId    String       @db.ObjectId
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  deletedAt DateTime?
  values    FieldValue[]
}
